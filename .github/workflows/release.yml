name: Build and Release Plugin

on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  # This job runs on every push and pull request to the main branch to verify the build.
  verify-build:
    name: Verify Plugin Build
    runs-on: ubuntu-latest
    # This job runs on push and PR, but not on manual dispatch.
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the plugin image
        run: docker build -t vault-secrets-plugin:temp .

      - name: Create plugin rootfs
        run: |
          mkdir -p ./plugin/rootfs
          docker create --name temp-container vault-secrets-plugin:temp
          docker export temp-container | tar -x -C ./plugin/rootfs
          docker rm temp-container
          docker rmi vault-secrets-plugin:temp

      - name: Copy config.json
        run: cp config.json ./plugin/

      - name: Create the plugin for verification
        run: docker plugin create my-test-org/vault-secrets-plugin:test ./plugin

      - name: Inspect the plugin to confirm it was created
        run: docker plugin inspect my-test-org/vault-secrets-plugin:test

  # This job builds, pushes the plugin to Docker Hub, and creates a GitHub Release.
  # It only runs when manually triggered via the "Run workflow" button.
  release:
    name: Create and Publish Release
    runs-on: ubuntu-latest
    # This job only runs on a manual 'workflow_dispatch' trigger.
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write # Required to create a GitHub release
      packages: write # Required to push packages to a registry
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Plugin
        env:
          PLUGIN_NAME: ghcr.io/${{ github.repository_owner }}/vault-secrets-plugin
          PLUGIN_VERSION: ${{ github.event.inputs.version }}
        run: |
          # The build logic is based on your deploy.sh and build.sh scripts
          docker build -t vault-secrets-plugin:temp .
          mkdir -p ./plugin/rootfs
          docker create --name temp-container vault-secrets-plugin:temp
          docker export temp-container | tar -x -C ./plugin/rootfs
          docker rm temp-container
          docker rmi vault-secrets-plugin:temp
          cp config.json ./plugin/

          # Create and push the version-specific tag
          docker plugin create ${{ env.PLUGIN_NAME }}:${{ env.PLUGIN_VERSION }} ./plugin
          docker plugin push ${{ env.PLUGIN_NAME }}:${{ env.PLUGIN_VERSION }}

          # Create and push the 'latest' tag
          docker plugin create ${{ env.PLUGIN_NAME }}:latest ./plugin
          docker plugin push ${{ env.PLUGIN_NAME }}:latest

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: "Official release for version ${{ github.event.inputs.version }}."
          draft: false
          prerelease: false