# lefthook.yml
# This file is automatically generated by setup-hooks.sh

pre-commit:
  parallel: true
  commands:
    go-tidy:
      glob: "{go.mod,*.go}"
      run: go mod tidy && git add go.mod go.sum

    go-fmt:
      glob: "*.go"
      run: |
        for file in {staged_files}; do
          go fmt "$file"
          git add "$file"
        done

    go-vet:
      glob: "**/*.go"
      run: go vet ./...
    # Ensure imports are correctly formatted.
    go-imports:
      glob: "**/*.go"
      run: goimports -w {files} && git add {files}

    # go-test:
    #   glob: "*.go"
    #   run: go test -race ./...

    golangci-lint:
      glob: "**/*.go"
      run: golangci-lint run ./...

    gosec:
      glob: "**/*.go"
      run: gosec ./...

    # Check for cyclomatic complexity. You'll need to install it:
    # `go install github.com/fzipp/gocyclo/cmd/gocyclo@latest`
    gocyclo:
      glob: "**/*.go"
      run: gocyclo -over 17 .
      
    eof-newline:
      help: Fail when a staged file does not end with a POSIX newline
      # pick the extensions you care about; here are the most common text types
      glob: "**/*.{go,sh,md,yml,yaml,json,txt}"
      stage_fixed: true          # lefthook will git-add any file we modify
      run: |
        fixed=0
        for file in {staged_files}; do
          [ -s "$file" ] || continue       # skip empty files
          # last byte → decimal code   (10 == '\n')
          last_byte=$(tail -c1 "$file" | od -An -t u1 | tr -d ' ')
          if [ "$last_byte" != "10" ]; then
            printf '\n' >> "$file"         # append missing newline
            echo "↪  added newline at EOF → $file"
            fixed=$((fixed + 1))
          fi
        done
        echo "✔  fixed $fixed file(s)"
        [ "$fixed" -eq 0 ]
